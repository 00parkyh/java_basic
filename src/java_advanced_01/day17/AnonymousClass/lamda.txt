//람다란 ?
이름 없는 함수이다. 메소드르 하나의 식으로 표현하는 방법으로, 메소드의 이름과 반환값이 없고, 매개변수와
실행문만으로 구성된다.

//람다의 기본 문법
(매개변수 목록) -> {실행문}

매개변수가 없는 경우 () 내부를 비울 수 있다.             ex) () -> {System.out.print("매개변수가 없는 경우")}

매개변수가 하나인 경우 () 를 생략할 수 있다.             ex) name ->{System.out.print("Hello "+name)}

매개변수가 여러개인 경우 () 로 묶어 주고 , 로 구분한다     ex) (int a, int b) -> {return a+b};

실행무이 여러 줄일 경우 {} 로 묶어주고, 반환값이 있다면 return 키워드를 명시해야 한다.
    ex) (String name, int age) -> {
            System.out.println("Name : " + name);
            System.out.println("Age  : " + age);
            return "Processed : " +name;
         };

람다를 사용하기 위한 핵심 조건은 함수형 인터페이스 이다.

함수형 인터페이스란 단 하나의 추상 메소드 만을 가지는 인터페이스를말한다. 람다 표현식은 바로 이 추상 메소드의 구현체로 동작한다.

@FunctionalInterface 어노테이션을 인터페이스 위에 붙이면,
컴파일러가 해당 인터페이스가 함수형 인터페이스의 조건을 만족하는지 검사해줍니다. (필수는 아니지만 권장됩니다)