직렬화와 역 직렬화
직렬화 : 메모리에 생성된 객체를 파일 또는 네트워크로 출력하기 위해 필드값을 일렬로 늘어선 바이트로 변경하는 것
- objectOutputStream : 바이트 출력 스트림과 연결되어 객체를 직렬화

역 직렬화 : 직렬화된 바이트를 객체의 필드값으로 복원하는 것
- objectInputStream : 바이트 입력 스트림과 연결되어 객체로 복원하는 역직렬화

일상 예시를 사용한 직렬화와 역직렬화의 예시
물건을 택배로 보내기 위해 상자에 포장해서 보내는 과정 -> 상자에 포장이 (바이트 스트림으로 변환) 이다.
택배 상자(바이트 스트림)가 집에 도착하면 상자를 열어서 원래 물건을 꺼내는 과정 상자에서 물건을 꺼내는 것이 (객체로 변환) 이다.

자바에서 직렬화, 역직렬화를 사용하는 이유
1. 객체를 저장하기 위해
    프로그램을 종료하면 메모리에 있는 객체는 사라진다. 하지만 객체(필드 값 등) 를 파일이나 DB에 보관하고 싶을때
    직렬화를 통해 객체를 파일로 저장할 수 있다.
2. 객체를 네트워크로 전송하기 위해
    클라이언트, 서버가 데이터를 주고 받을 때 단순 텍스트만 오가는게 아니라, 객체 자체를 전송하고싶을 때가 있다.
3. JVM 간 호환성 유지
    객체는 JVM 내부 메모리에 존재하는 형태라, 다른 JVM 에서는 그대로 인식할 수 없다. 직렬화하면 환경이 달라도 같은 객체를 복원할 수 있다.
4. 분산 시스템에서 객체 공유
    RMI, EJB 같은 분산 환경에서는 서로 다른 JVM 간에 객체를 주고 받아야 한다.

implements Serializable 을 클래스에 해주어야 해당 클래스를 직렬화 할 수 있다.
인스턴트 필드 값은 직렬화의 대상이다. 하지만 정적 필드값과 transient 로 선언된 필드값은 직렬화에서 제외된다.